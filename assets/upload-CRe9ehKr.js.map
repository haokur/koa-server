{"version":3,"file":"upload-CRe9ehKr.js","sources":["../../utils/common.util.ts","../../../node_modules/spark-md5/spark-md5.js","../../utils/file.util.ts","../../classes/FileUploader.ts","../../components/UploadControl.vue","../../hooks/upload.hook.ts","../../pages/upload/upload.vue"],"sourcesContent":["export async function asyncForEach(arr, callback) {\n    const length = arr.length;\n    const O = Object(arr);\n    let k = 0;\n    while (k < length) {\n        if (k in O) {\n            const kValue = O[k];\n            await callback(kValue, k, O);\n        }\n        k++;\n    }\n}\n\nexport function getRandomNum(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport function getRandomStr(len) {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'.split('');\n    let KEY = '';\n    const charsLength = chars.length;\n    for (let i = 0; i < len; i += 1) {\n        KEY += chars[getRandomNum(0, charsLength)];\n    }\n    return KEY;\n}\n","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash.slice()\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} [raw] True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n","import SparkMD5 from 'spark-md5';\n\nexport function getFileMD5(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n\n        fileReader.onload = function (event) {\n            const spark = new SparkMD5.ArrayBuffer();\n            const result = event.target?.result as ArrayBuffer;\n            spark.append(result);\n            const md5 = spark.end();\n            resolve(md5);\n        };\n\n        fileReader.onerror = function (error) {\n            reject(error);\n        };\n\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n\nexport function getFileExt(filePath: string): string {\n    return filePath.split('.').pop() || '';\n}\n","import axios from 'axios';\nimport { AsyncQueue } from './AsyncQueue';\nimport { getFileExt, getFileMD5 } from '../utils/file.util';\n\nexport interface ICurrentUploadObj {\n    chunkSize: number;\n    file: null | File;\n    fileName: string;\n    fileExt: string;\n    totalChunk: number;\n    finishedChunk: number;\n    chunkPercentage: number;\n    /**status 0 未上传，1上传中 2 已上传 */\n    chunkStatus: { start: number; end: number; status: 0 | 1 | 2 }[];\n    /**上传后远程的文件地址 */\n    remoteFileUrl: string;\n    /**md5的值 */\n    md5Value?: string;\n}\n\nexport interface IUploaderMethod {\n    /**\n     * 实际上传接口请求方法\n     * @param {number} i 请求片段索引\n     * @returns {Promise<void>}\n     */\n    (i: number): Promise<void>;\n}\n\nconst DefaultChunkSize = 0.4 * 1024 * 1024;\nconst DefaultMaxConcurrent = 2;\nexport class FileUploader {\n    private currentUploadObj: ICurrentUploadObj = {\n        chunkSize: 1024,\n        file: null,\n        fileName: '',\n        fileExt: '',\n        totalChunk: 0,\n        finishedChunk: 0,\n        chunkPercentage: 0,\n        chunkStatus: [],\n        remoteFileUrl: '',\n    };\n\n    private splitChunkSize: number;\n    private uploader: IUploaderMethod;\n    private concurrentMax: number;\n    private chunkUploadQueue: AsyncQueue;\n    constructor(\n        file: File,\n        concurrentMax?,\n        chunkSize?: number,\n        uploader?: IUploaderMethod | undefined\n    ) {\n        this.currentUploadObj.file = file;\n        this.currentUploadObj.fileName = file.name;\n        this.currentUploadObj.fileExt = getFileExt(file.name);\n        this.splitChunkSize = chunkSize || DefaultChunkSize;\n        this.currentUploadObj.chunkSize = this.splitChunkSize;\n        this.uploader = uploader || this._defaultUploader;\n        this.concurrentMax = concurrentMax || DefaultMaxConcurrent;\n        this.chunkUploadQueue = new AsyncQueue(this.concurrentMax);\n    }\n\n    private async _defaultUploader(i: number) {\n        const currentUploadObj = this.currentUploadObj;\n        const blob = this.getRangeBufferByIndex(i);\n        const { fileName, fileExt, totalChunk, md5Value } = currentUploadObj;\n\n        const formData = new FormData();\n        formData.append('file', blob);\n\n        let reqUrl = `${$env.baseUrl}/file/upload?fileName=${fileName}&currentChunkIndex=${i}&totalChunkNum=${totalChunk}`;\n        if (md5Value) {\n            reqUrl += `&md5=${md5Value}&ext=${fileExt}`;\n        }\n        await axios.post(reqUrl, formData).then(() => {\n            currentUploadObj.finishedChunk += 1;\n            let progressCount =\n                (currentUploadObj.finishedChunk / currentUploadObj.totalChunk) * 100;\n            progressCount = Math.floor(progressCount);\n            currentUploadObj.chunkPercentage = progressCount;\n            currentUploadObj.chunkStatus[i].status = 2;\n        });\n    }\n\n    /**根据splitChunkSize切开的，取第i块 */\n    private getRangeBufferByIndex(i: number) {\n        const file = this.currentUploadObj.file as File;\n        const start = i * this.splitChunkSize;\n        const end = Math.min(start + this.splitChunkSize, file.size);\n        const blob = file.slice(start, end);\n        return blob;\n    }\n\n    /**将文件切开 */\n    private splitFile2Chunks() {\n        const file = this.currentUploadObj.file as File;\n        const chunkSize = this.splitChunkSize;\n        const totalChunk = Math.ceil(file.size / chunkSize);\n        console.log(file.size, chunkSize, totalChunk, 'FileUploader.ts::101行');\n        const chunkStatus = Array.from({ length: totalChunk }, (_, index) => {\n            return {\n                index: index,\n                start: index * chunkSize,\n                end: (index + 1) * chunkSize,\n                status: 0,\n            };\n        });\n        Object.assign(this.currentUploadObj, {\n            file,\n            totalChunk,\n            fileName: file.name,\n            finishedChunk: 0,\n            chunkPercentage: 0,\n            chunkStatus,\n            remoteFileUrl: '',\n        });\n        return chunkStatus;\n    }\n\n    /**以md5的方式，检查文件是否已经存在，已经存在则不需重复上传 */\n    private async isFileExist(): Promise<boolean> {\n        const md5Value = await getFileMD5(this.currentUploadObj.file as File);\n        this.currentUploadObj.md5Value = md5Value;\n        const result = await axios.head(\n            `${$env.baseUrl}/file/exist?md5=${md5Value}&ext=${this.currentUploadObj.fileExt}`\n        );\n        const size: string = (result.headers['content-length'] || '0') as string;\n        return parseInt(size) > 0;\n    }\n\n    /**使用异步队列，切块上传 */\n    async enqueue(chunkCallback?, finishCallback?) {\n        // 获取当前文件的md5值，如果服务器存在该文件，则队列置空，直接返回文件\n        const isFileExist = await this.isFileExist();\n        console.log('是否存在', isFileExist, 'FileUploader.ts::136行');\n\n        this.chunkUploadQueue.finishCallback = () => {\n            console.log('执行队列完成的回调finishCallback', 'FileUploader.ts::139行');\n            const { md5Value, fileName, fileExt } = this.currentUploadObj;\n            const remoteFileName = md5Value ? `${md5Value}.${fileExt}` : fileName;\n            const remoteFileUrl = `${$env.baseUrl}/file/upload-result?fileName=${remoteFileName}`;\n            this.currentUploadObj.remoteFileUrl = remoteFileUrl;\n            finishCallback && finishCallback(this.currentUploadObj);\n        };\n\n        if (isFileExist) return;\n\n        const chunkStatus = this.splitFile2Chunks();\n        console.log('切割开的块', chunkStatus, 'FileUploader.ts::150行');\n        this.chunkUploadQueue.addManyTask(chunkStatus, async (taskItem) => {\n            const { index } = taskItem;\n            await this.uploader(index);\n            chunkCallback && chunkCallback(this.currentUploadObj);\n        });\n    }\n\n    pause() {\n        this.chunkUploadQueue.pause();\n    }\n\n    async start() {\n        this.chunkUploadQueue.run();\n    }\n}\n","<template>\n    <div class=\"upload-wrap\">\n        <input\n            class=\"input\"\n            :id=\"cptId\"\n            type=\"file\"\n            multiple\n            :disabled=\"isLoading\"\n            @change=\"handleFilesChange\"\n        />\n        <label :for=\"cptId\" class=\"img-label\" ref=\"multiUploadLabelRef\">\n            <slot>\n                <div class=\"progress-loading\">\n                    <div class=\"progress-mask\" v-loading=\"isLoading\"></div>\n                    <div class=\"progress-content\">\n                        <el-progress\n                            v-if=\"progress\"\n                            type=\"circle\"\n                            :width=\"60\"\n                            :status=\"`${progress === 100 ? 'success' : ''}`\"\n                            :percentage=\"progress\"\n                        />\n                    </div>\n                </div>\n            </slot>\n        </label>\n        <div class=\"img-list\">\n            <div class=\"img-item\" v-for=\"(item, index) in imgList\" :key=\"index\">\n                <img :src=\"item.imgUrl\" class=\"img\" />\n            </div>\n        </div>\n    </div>\n</template>\n<script lang=\"tsx\" setup>\nimport { PropType, computed, onMounted, ref } from 'vue';\nimport { getRandomStr } from '../utils/common.util';\nimport { AsyncQueue } from '../classes/AsyncQueue';\nimport { FileUploader, ICurrentUploadObj } from '../classes/FileUploader';\n\ninterface IImgItem {\n    imgUrl: string;\n}\nconst props = defineProps({\n    imgList: {\n        type: Array as PropType<IImgItem[]>,\n        default() {\n            return [];\n        },\n    },\n    /**并发几个文件 */\n    concurrentFileNum: { type: Number, default: 2 },\n    /**单个文件并发多少个分片 */\n    fileConcurrentChunkNum: { type: Number, default: 2 },\n    bizId: { type: String, default: '' },\n});\n\nconst isLoading = ref(false);\nconst newImgList = ref<string[]>([]);\nconst fileList = ref<File[]>([]);\nconst progress = computed(() => {\n    if (!fileList.value.length) return 0;\n    return Math.floor((newImgList.value.length / fileList.value.length) * 100);\n});\n\nconst cptId = ref('');\nonMounted(() => {\n    cptId.value = 'cpt_' + getRandomStr(8);\n});\n\n// 供外部调用点击事件=>选择文件\nconst multiUploadLabelRef = ref();\nfunction chooseFile() {\n    multiUploadLabelRef.value.click();\n}\ndefineExpose({ chooseFile });\n\nfunction handleFilesChange(ev: Event) {\n    if (isLoading.value) return;\n    isLoading.value = true;\n    const inputFiles = (ev.target as HTMLInputElement).files;\n    if (!inputFiles) return;\n    const filesArr = Array.from(inputFiles);\n    submitUpload(filesArr);\n}\n\n// 分片上传单个文件\nasync function uploadItem(fileItem: File) {\n    return new Promise(async (resolve) => {\n        const fileUploader = new FileUploader(fileItem, props.fileConcurrentChunkNum);\n        await fileUploader.enqueue(null, (uploadObj: ICurrentUploadObj) => {\n            let currentItem = { imgUrl: uploadObj.remoteFileUrl };\n            console.log(\"成功回调\",\"UploadControl.vue::92行\");\n            resolve(currentItem);\n        });\n        console.log('单个文件添加队列完成', 'UploadControl.vue::94行');\n        fileUploader.start();\n    });\n}\n\nconst emits = defineEmits(['success', 'update:imgList']);\nfunction submitUpload(fileArr: File[]) {\n    fileList.value = fileArr;\n    const ChannelQueue = new AsyncQueue(props.fileConcurrentChunkNum);\n    ChannelQueue.addManyTask(fileArr, async (queueItem) => {\n        const uploadResult = await uploadItem(queueItem);\n        emits('update:imgList', [...props.imgList, uploadResult]);\n        emits('success', uploadResult);\n        newImgList.value.push('');\n    });\n    ChannelQueue.finishCallback = () => {\n        setTimeout(() => {\n            isLoading.value = false;\n            newImgList.value = [];\n            fileList.value = [];\n        }, 2000);\n    };\n    ChannelQueue.run();\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.upload-wrap {\n    display: flex;\n    align-items: flex-start;\n\n    .input {\n        position: fixed;\n        left: -1000px;\n        top: -1000px;\n    }\n}\n\n.img {\n    &-label {\n        display: inline-block;\n        width: 100px;\n        height: 100px;\n        border: 1px solid #e1e1e1;\n        border-radius: 8px;\n        overflow: hidden;\n        position: relative;\n\n        &:before,\n        &:after {\n            position: absolute;\n            content: '';\n            left: 50%;\n            top: 50%;\n            background-color: #e1e1e1;\n            border-radius: 1px;\n            transform: translate(-50%, -50%);\n        }\n\n        &:before {\n            width: 40px;\n            height: 2px;\n        }\n\n        &:after {\n            width: 2px;\n            height: 40px;\n        }\n    }\n\n    &-list {\n        display: flex;\n        align-items: flex-start;\n    }\n\n    &-item {\n        width: 100px;\n        height: 100px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        overflow: hidden;\n        flex-shrink: 0;\n        margin-left: 8px;\n        background-color: #f5f5f5;\n\n        .img {\n            max-width: 100%;\n            max-height: 100%;\n        }\n    }\n}\n.progress {\n    &-mask {\n        width: 100%;\n        height: 100px;\n    }\n    &-content {\n        position: absolute;\n        left: 0;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: rgba(255, 255, 255, 0.6);\n        z-index: 99999;\n    }\n}\n</style>\n","/**\n * 外部只需要知道几个值：当前上传进度，下载完成的目标地址\n * 两个方法：开始，暂停\n */\nimport { ref } from 'vue';\nimport { FileUploader, ICurrentUploadObj } from '../classes/FileUploader';\n\nexport function useUpload(maxConcurrent = 4, chunkSize = 0.4 * 1024 * 1024) {\n    const progress = ref(0);\n    const remoteUrl = ref('');\n    let fileUploader!: FileUploader;\n\n    const initUpload = async (file: File, finishCallback?) => {\n        fileUploader = new FileUploader(file, maxConcurrent, chunkSize);\n        await fileUploader.enqueue(\n            (uploadObj: ICurrentUploadObj) => {\n                progress.value = uploadObj.chunkPercentage;\n            },\n            (uploadObj: ICurrentUploadObj) => {\n                remoteUrl.value = uploadObj.remoteFileUrl;\n                finishCallback && finishCallback();\n            }\n        );\n    };\n\n    const startUpload = () => {\n        fileUploader.start();\n    };\n\n    const pauseUpload = () => {\n        fileUploader.pause();\n    };\n\n    return { progress, remoteUrl, initUpload, startUpload, pauseUpload };\n}\n","<template>\n    <div class=\"upload\">\n        <input type=\"file\" @change=\"handleFileChange\" />\n        <div class=\"demo-progress\" v-if=\"controlVisible\">\n            <el-progress :percentage=\"progress\" />\n        </div>\n\n        <div class=\"upload-all\" v-if=\"controlVisible\">\n            <el-button type=\"primary\" @click=\"startUpload\">全部片段上传</el-button>\n            <el-button type=\"primary\" @click=\"pauseUpload\">中断上传</el-button>\n            <el-button type=\"primary\" @click=\"startUpload\">继续上传</el-button>\n        </div>\n\n        <img class=\"img\" :src=\"remoteUrl\" v-if=\"remoteUrl\" />\n        <div>\n            <h3>上传组件</h3>\n            <UploadControl v-model:imgList=\"imgList\"></UploadControl>\n        </div>\n    </div>\n</template>\n<script lang=\"ts\" setup>\nimport { ref } from 'vue';\n\nimport UploadControl from '../../components/UploadControl.vue';\nimport { useUpload } from '../../hooks/upload.hook';\n\nconst imgList = ref([]);\nconst fileMd5Value = ref('');\n\n// 最多并发数量，在上次未完成前，不能再发，避免一次太多请求\nconst ConcurrentMaxNum = 2;\nconst chunkSize = 0.4 * 1024 * 1024; // 400K\nconst { progress, remoteUrl, initUpload, pauseUpload, startUpload } = useUpload(\n    ConcurrentMaxNum,\n    chunkSize\n);\nconst controlVisible = ref(false);\nconst handleFileChange = (ev) => {\n    controlVisible.value = true;\n    initUpload(ev.target.files[0], (res) => {\n        console.log(res, 'upload.vue::73行');\n    });\n    // 使用类上传\n    // const fileUploader = new FileUploader(ev.target.files[0]);\n    // fileUploader.upload((remoteUrl) => {\n    //     console.log(remoteUrl, 'upload.vue::47行');\n    // });\n};\n</script>\n<style lang=\"scss\" scoped>\n.upload {\n    padding: 40px;\n}\n.steps {\n    margin-top: 20px;\n}\n.demo-progress {\n    margin-top: 20px;\n}\n.upload-all {\n    margin-top: 20px;\n}\n.img {\n    margin-top: 20px;\n    width: 300px;\n    height: auto;\n}\n</style>\n"],"names":["getRandomNum","min","max","getRandomStr","len","chars","KEY","charsLength","factory","module","undefined","hex_chr","md5cycle","x","k","a","b","c","d","md5blk","s","md5blks","i","md5blk_array","md51","n","state","length","tail","tmp","lo","hi","md51_array","rhex","j","hex","clamp","val","from","to","begin","end","num","target","targetArray","sourceArray","toUtf8","str","utf8Str2ArrayBuffer","returnUInt8Array","buff","arr","arrayBuffer2Utf8Str","concatenateArrayBuffers","first","second","result","hexToBinaryString","bytes","SparkMD5","contents","raw","ret","content","hash","getFileMD5","file","resolve","reject","fileReader","event","spark","_a","md5","error","getFileExt","filePath","DefaultChunkSize","DefaultMaxConcurrent","FileUploader","concurrentMax","chunkSize","uploader","__publicField","AsyncQueue","currentUploadObj","blob","fileName","fileExt","totalChunk","md5Value","formData","reqUrl","define_env_default","axios","progressCount","start","chunkStatus","_","index","size","chunkCallback","finishCallback","isFileExist","remoteFileName","remoteFileUrl","taskItem","props","__props","isLoading","ref","newImgList","fileList","progress","computed","value","Math","floor","cptId","onMounted","multiUploadLabelRef","chooseFile","click","__expose","handleFilesChange","ev","inputFiles","files","filesArr","Array","submitUpload","uploadItem","fileItem","Promise","fileUploader","fileConcurrentChunkNum","enqueue","uploadObj","currentItem","imgUrl","console","log","emits","__emit","fileArr","ChannelQueue","addManyTask","queueItem","uploadResult","imgList","push","setTimeout","run","useUpload","maxConcurrent","remoteUrl","ConcurrentMaxNum","initUpload","pauseUpload","startUpload","controlVisible","handleFileChange","res"],"mappings":"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","x_google_ignoreList":[1]}